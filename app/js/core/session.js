// Generated by CoffeeScript 1.6.2
(function() {
  Bolk.Session = (function() {
    function Session() {
      this.token = locache.get('session_token');
      Object.defineProperty(this, 'isLoggedIn', {
        get: function() {
          return this.token != null;
        }
      });
    }

    Session.prototype.oauth = function(cid, secret, redirect) {
      var state;

      if (cid == null) {
        cid = Bolk.clientId;
      }
      if (secret == null) {
        secret = Bolk.clientSecret;
      }
      if (redirect == null) {
        redirect = "https://ledenadmin.i.bolkhuis.nl/";
      }
      state = Math.random().toString();
      return locache.async.set('session_token_state', state).finished(function() {
        return window.location = "https://login.i.bolkhuis.nl/" + "authorize?response_type=code" + ("&state=" + state) + ("&client_id=" + cid) + ("&client_pass=" + secret) + ("&redirect_uri=" + redirect);
      });
    };

    Session.prototype.login = function(code, state) {
      var promise,
        _this = this;

      promise = jQuery.Deferred();
      locache.async.get('session_token_state').finished(function(cached_state) {
        locache.remove('session_token_state');
        if (!cached_state || cached_state !== state) {
          promise.reject("Wrong state! Did you make this request? " + state + " vs " + cached_state + " ");
          return false;
        }
        return Bolk.OAuthRequest.getAccessToken(code).request.done(function(data) {
          console.info('token is: ', data);
          _this.token = data;
          locache.async.set('session_token', data, 3500);
          return promise.resolve(_this.token);
        }).fail(function(error) {
          return promise.reject("when getting token: " + error);
        });
      });
      return promise.promise();
    };

    Session.prototype.kill = function() {
      locache.remove('session_token');
      return locache.flush();
    };

    return Session;

  })();

}).call(this);
