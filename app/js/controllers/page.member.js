// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Bolk.MemberPageController = (function(_super) {
    __extends(MemberPageController, _super);

    MemberPageController.CacheTime = 120;

    function MemberPageController(uid) {
      var _this = this;

      this.uid = uid;
      MemberPageController.__super__.constructor.call(this, new Bolk.MemberPage('member-' + this.uid));
      locache.async.get('member-page-' + this.uid).finished(function(data) {
        if (!data) {
          return _this._fetchMember();
        } else {
          return _this._parseMember(data);
        }
      });
    }

    MemberPageController.prototype._fetchMember = function() {
      var blip,
        _this = this;

      blip = new Bolk.BlipRequest("persons/" + this.uid);
      return blip.request.done(function(blipdata) {
        var operculum;

        if (typeof blipdata === String) {
          blipdata = JSON.parse(blipdata);
        }
        operculum = new Bolk.OperculumRequest("person/" + _this.uid);
        return operculum.request.done(function(operculumdata) {
          var data;

          if (typeof operculumdata === String) {
            operculumdata = JSON.parse(operculumdata);
          }
          data = _.extend(operculumdata, blipdata, {
            complete: true
          });
          locache.async.set('member-page-' + _this.uid, data, MemberPageController.CacheTime);
          return _this._parseMember(data);
        }).fail(function(error) {
          var data;

          console.log(error);
          data = _.extend(blipdata, {
            complete: true
          });
          locache.async.set('member-page-' + _this.uid, data, MemberPageController.CacheTime);
          return _this._parseMember(data);
        });
      });
    };

    MemberPageController.prototype._parseMember = function(data) {
      this.model = new Bolk.Person(data);
      return this.view.display(this.model);
    };

    MemberPageController.prototype._displayMember = function(model) {};

    return MemberPageController;

  })(Bolk.PageController);

}).call(this);
