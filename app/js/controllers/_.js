// Generated by CoffeeScript 1.6.2
(function() {
  Bolk.Controller = (function() {
    function Controller(view) {
      this.view = view;
      this._children = {};
    }

    Controller.prototype.addChild = function(id, controller) {
      this._children[id] = controller;
      return this;
    };

    Controller.prototype.removeChild = function(id, kill) {
      var _ref;

      if (kill == null) {
        kill = true;
      }
      if (kill) {
        if ((_ref = this._children[id]) != null) {
          _ref.kill();
        }
      }
      delete this._children[id];
      return this;
    };

    Controller.prototype.each = function(func) {
      return _.each(this._children, func);
    };

    Controller.prototype.controller = function(id) {
      return this._children[id];
    };

    Controller.prototype.controllers = function() {
      return this._children;
    };

    Controller.prototype.findKey = function(func) {
      var result;

      result = null;
      if (_.find(this.controllers(), function(v, key) {
        result = key;
        return func(v);
      })) {
        return result;
      }
      return null;
    };

    Controller.prototype.kill = function() {
      var child, id, _ref, _ref1;

      _ref = this._children;
      for (id in _ref) {
        child = _ref[id];
        this.removeChild(id, true);
      }
      if ((_ref1 = this.view) != null) {
        _ref1.kill();
      }
      return this;
    };

    Controller.prototype.beforeUnload = function() {
      return void 0;
    };

    Controller.prototype.onUnload = function() {
      this.each(function(child) {
        return child.onUnload();
      });
      return void 0;
    };

    return Controller;

  })();

}).call(this);
