// Generated by CoffeeScript 1.6.2
(function() {
  Bolk.ViewCollection = (function() {
    function ViewCollection(id) {
      this.id = id;
      if (this.id != null) {
        this.container = $(id);
      }
      this._views = [];
    }

    ViewCollection.prototype.clear = function() {
      var view, _i, _len, _ref;

      _ref = this._views;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        view = _ref[_i];
        view.clear();
      }
      return this;
    };

    ViewCollection.prototype.kill = function(reset) {
      var view, _i, _len, _ref;

      if (reset == null) {
        reset = false;
      }
      this.clear();
      _ref = this._views;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        view = _ref[_i];
        if (typeof view.kill === "function") {
          view.kill();
        }
      }
      if (reset) {
        this._views = [];
      }
      return this;
    };

    ViewCollection.prototype.add = function(view, draw) {
      if (draw == null) {
        draw = true;
      }
      this._views.push(view);
      if (draw) {
        view.draw();
      }
      return this;
    };

    ViewCollection.prototype.remove = function(view) {
      this._views = _.without(this._views, view);
      return this;
    };

    ViewCollection.prototype.draw = function() {
      var view, _i, _len, _ref;

      _ref = this._views;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        view = _ref[_i];
        view.draw();
      }
      return this;
    };

    ViewCollection.prototype.redraw = function() {
      var view, _i, _len, _ref;

      _ref = this._views;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        view = _ref[_i];
        view.redraw();
      }
      return this;
    };

    ViewCollection.prototype.each = function(func) {
      return _.each(this._views, func);
    };

    return ViewCollection;

  })();

}).call(this);
